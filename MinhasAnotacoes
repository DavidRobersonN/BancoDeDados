/* Minhas anotações */

CREATE DATABASE COMERCIO;

USE COMERCIO;

CREATE TABLE CLIENTE(
	IDCLIENTE INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30) NOT NULL,
	SEXO ENUM('M','F') NOT NULL,
	EMAIL VARCHAR(50) UNIQUE,
	CPF VARCHAR(15) UNIQUE
);

CREATE TABLE ENDERECO(
	IDENDERECO INT PRIMARY KEY AUTO_INCREMENT, 
	RUA VARCHAR(30) NOT NULL,
	BAIRRO VARCHAR(30) NOT NULL,
	CIDADE VARCHAR(30) NOT NULL,
	ESTADO CHAR(2) NOT NULL,
	ID_CLIENTE INT UNIQUE,

	FOREIGN KEY(ID_CLIENTE)
	REFERENCES CLIENTE(IDCLIENTE)
);

CREATE TABLE TELEFONE(
	IDTELEFONE INT PRIMARY KEY AUTO_INCREMENT, 
	TIPO ENUM('RES','COM','CEL') NOT NULL,
	NUMERO VARCHAR(10) NOT NULL,
	ID_CLIENTE INT,

	FOREIGN KEY(ID_CLIENTE)
	REFERENCES CLIENTE(IDCLIENTE)
);

INSERT INTO CLIENTE VALUES(NULL,'JOAO','M','JOAOA@IG.COM','76567587887');
INSERT INTO CLIENTE VALUES(NULL,'CARLOS','M','CARLOSA@IG.COM','5464553466');
INSERT INTO CLIENTE VALUES(NULL,'ANA','F','ANA@IG.COM','456545678');
INSERT INTO CLIENTE VALUES(NULL,'CLARA','F',NULL,'5687766856');
INSERT INTO CLIENTE VALUES(NULL,'JORGE','M','JORGE@IG.COM','8756547688');
INSERT INTO CLIENTE VALUES(NULL,'CELIA','F','JCELIA@IG.COM','5767876889');
INSERT INTO CLIENTE VALUES(NULL,'PAULA','M',NULL,'77437493');
INSERT INTO CLIENTE VALUES(NULL,'FLAVIO','M','FLAVIO@IG.COM','4657765');
INSERT INTO CLIENTE VALUES(NULL,'ANDRE','M','ANDRE@GLOBO.COM','7687567');
INSERT INTO CLIENTE VALUES(NULL,'GIOVANA','F',NULL,'0876655');
INSERT INTO CLIENTE VALUES(NULL,'KARLA','F','KARLA@GMAIL.COM','545676778');
INSERT INTO CLIENTE VALUES(NULL,'DANIELE','F','DANIELE@GMAIL.COM','43536789');
INSERT INTO CLIENTE VALUES(NULL,'LORENA','F',NULL,'774557887');
INSERT INTO CLIENTE VALUES(NULL,'EDUARDO','M',NULL,'54376457');
INSERT INTO CLIENTE VALUES(NULL,'ANTONIO','M','ANTONIO@IG.COM','12436767');
INSERT INTO CLIENTE VALUES(NULL,'ANTONIO','M','ANTONIO@UOL.COM','3423565');
INSERT INTO CLIENTE VALUES(NULL,'ELAINE','F','ELAINE@GLOBO.COM','32567763');
INSERT INTO CLIENTE VALUES(NULL,'CARMEM','F','CARMEM@IG.COM','787832213');
INSERT INTO CLIENTE VALUES(NULL,'ADRIANA','F','ADRIANA@GMAIL.COM','88556942');
INSERT INTO CLIENTE VALUES(NULL,'JOICE','F','JOICE@GMAIL.COM','55412256');



INSERT INTO ENDERECO VALUES(NULL,'RUA ANTONIO SA','CENTRO','B. HORIZONTE','MG',24);
INSERT INTO ENDERECO VALUES(NULL,'RUA CAPITAO HERMES','CENTRO','RIO DE JANEIRO','RJ',21);
INSERT INTO ENDERECO VALUES(NULL,'RUA PRES VARGAS','JARDINS','SAO PAULO','SP',23);
INSERT INTO ENDERECO VALUES(NULL,'RUA ALFANDEGA','ESTACIO','RIO DE JANEIRO','RJ',22);
INSERT INTO ENDERECO VALUES(NULL,'RUA DO OUVIDOR','FLAMENGO','RIO DE JANEIRO','RJ',26);
INSERT INTO ENDERECO VALUES(NULL,'RUA URUGUAIANA','CENTRO','VITORIA','ES',25);
INSERT INTO ENDERECO VALUES(NULL,'RUA JOAQUIM SILVA','ALVORADA','NITEROI','RJ',27);
INSERT INTO ENDERECO VALUES(NULL,'RUA GOMES FREIRE','CENTRO','RIO DE JANEIRO','RJ',28);
INSERT INTO ENDERECO VALUES(NULL,'RUA GUEDES','CASCADURA','B. HORIZONTE','MG',29);
INSERT INTO ENDERECO VALUES(NULL,'RUA MAIA LACERDA','ESTACIO','RIO DE JANEIRO','RJ',30);
INSERT INTO ENDERECO VALUES(NULL,'RUA VISCONDESSA','CENTRO','RIO DE JANEIRO','RJ',31);
INSERT INTO ENDERECO VALUES(NULL,'RUA NELSON MANDELA','COPACABANA','RIO DE JANEIRO','RJ',32);
INSERT INTO ENDERECO VALUES(NULL,'RUA ARAUJO LIMA','CENTRO','VITORIA','ES',33);
INSERT INTO ENDERECO VALUES(NULL,'RUA CASTRO ALVES','LEBLON','RIO DE JANEIRO','RJ',34);
INSERT INTO ENDERECO VALUES(NULL,'AV CAPITAO ANTUNES','CENTRO','CURITIBA','PR',35);
INSERT INTO ENDERECO VALUES(NULL,'AV CARLOS BARROSO','JARDINS','SAO PAULO','SP',36);
INSERT INTO ENDERECO VALUES(NULL,'ALAMEDA SAMPAIO','BOM RETIRO','CURITIBA','PR',37);
INSERT INTO ENDERECO VALUES(NULL,'RUA DA LAPA','LAPA','SAO PAULO','SP',38);
INSERT INTO ENDERECO VALUES(NULL,'RUA GERONIMO','CENTRO','RIO DE JANEIRO','RJ',39);
INSERT INTO ENDERECO VALUES(NULL,'RUA GOMES FREIRE','CENTRO','RIO DE JANEIRO','RJ',40);




INSERT INTO TELEFONE VALUES(NULL,'CEL','78458743',25);
INSERT INTO TELEFONE VALUES(NULL,'RES','56576876',25);
INSERT INTO TELEFONE VALUES(NULL,'CEL','87866896',21);
INSERT INTO TELEFONE VALUES(NULL,'COM','54768899',22);
INSERT INTO TELEFONE VALUES(NULL,'RES','99667587',21);
INSERT INTO TELEFONE VALUES(NULL,'CEL','78989765',23);
INSERT INTO TELEFONE VALUES(NULL,'CEL','99766676',23);
INSERT INTO TELEFONE VALUES(NULL,'COM','66687899',21);
INSERT INTO TELEFONE VALUES(NULL,'RES','89986668',25);
INSERT INTO TELEFONE VALUES(NULL,'CEL','88687909',22);
INSERT INTO TELEFONE VALUES(NULL,'RES','68976565',29);
INSERT INTO TELEFONE VALUES(NULL,'CEL','99656675',29);
INSERT INTO TELEFONE VALUES(NULL,'CEL','33567765',31);
INSERT INTO TELEFONE VALUES(NULL,'CEL','88668786',31);
INSERT INTO TELEFONE VALUES(NULL,'COM','55689654',31);
INSERT INTO TELEFONE VALUES(NULL,'COM','88687979',32);
INSERT INTO TELEFONE VALUES(NULL,'COM','88965676',33);
INSERT INTO TELEFONE VALUES(NULL,'CEL','89966809',35);
INSERT INTO TELEFONE VALUES(NULL,'COM','88679978',36);
INSERT INTO TELEFONE VALUES(NULL,'CEL','99655768',37);
INSERT INTO TELEFONE VALUES(NULL,'RES','89955665',38);
INSERT INTO TELEFONE VALUES(NULL,'RES','77455786',39);
INSERT INTO TELEFONE VALUES(NULL,'RES','89766554',39);
INSERT INTO TELEFONE VALUES(NULL,'RES','77755785',30);
INSERT INTO TELEFONE VALUES(NULL,'COM','44522578',40);


/*
    EXERCICIOS
  */

/* 
RELATORIO GERAL DE TODOS OS CLIENTES (TELEFONE E ENDERECO)

RELATORIO DE HOMENS

RELATORIO DE MULHERES

QUANTIDADE DE HOMENS E MULHERES

IDS E EMAIL DAS MULHERES QUE MOREM NO CENTRO DO RIO DE JANEIRO E 
NAO TENHAM CELULAR
 */

/* PARA UMA CAMPANHA DE MARKETING, O SETOR SOLICITOU UM
RELATÓRIO COM O NOME, EMAIL E TELEFONE CELULAR 
DOS CLIENTES QUE MORAM NO ESTADO DO RIO DE JANEIRO 
VOCÊ TERÁ QUE PASSAR A QUERY PARA GERAR O RELATORIO PARA
O PROGRAMADOR */

/* 
	RELATORIO GERAL DE TODOS OS CLIENTES (TELEFONE E ENDERECO)
*/

SELECT C.NOME, C.SEXO, C.EMAIL, T.TIPO, T.NUMERO, E.RUA, E.BAIRRO, E.CIDADE, E.ESTADO
FROM CLIENTE C
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE;

+---------+------+-------------------+------+----------+--------------------+------------+----------------+--------+
| NOME    | SEXO | EMAIL             | TIPO | NUMERO   | RUA                | BAIRRO     | CIDADE         | ESTADO |
+---------+------+-------------------+------+----------+--------------------+------------+----------------+--------+
| JORGE   | M    | JORGE@IG.COM      | CEL  | 78458743 | RUA URUGUAIANA     | CENTRO     | VITORIA        | ES     |
| JORGE   | M    | JORGE@IG.COM      | RES  | 56576876 | RUA URUGUAIANA     | CENTRO     | VITORIA        | ES     |
| JOAO    | M    | JOAOA@IG.COM      | CEL  | 87866896 | RUA CAPITAO HERMES | CENTRO     | RIO DE JANEIRO | RJ     |
| CARLOS  | M    | CARLOSA@IG.COM    | COM  | 54768899 | RUA ALFANDEGA      | ESTACIO    | RIO DE JANEIRO | RJ     |
| JOAO    | M    | JOAOA@IG.COM      | RES  | 99667587 | RUA CAPITAO HERMES | CENTRO     | RIO DE JANEIRO | RJ     |
| ANA     | F    | ANA@IG.COM        | CEL  | 78989765 | RUA PRES VARGAS    | JARDINS    | SAO PAULO      | SP     |
| ANA     | F    | ANA@IG.COM        | CEL  | 99766676 | RUA PRES VARGAS    | JARDINS    | SAO PAULO      | SP     |
| JOAO    | M    | JOAOA@IG.COM      | COM  | 66687899 | RUA CAPITAO HERMES | CENTRO     | RIO DE JANEIRO | RJ     |
| JORGE   | M    | JORGE@IG.COM      | RES  | 89986668 | RUA URUGUAIANA     | CENTRO     | VITORIA        | ES     |
| CARLOS  | M    | CARLOSA@IG.COM    | CEL  | 88687909 | RUA ALFANDEGA      | ESTACIO    | RIO DE JANEIRO | RJ     |
| ANDRE   | M    | ANDRE@GLOBO.COM   | RES  | 68976565 | RUA GUEDES         | CASCADURA  | B. HORIZONTE   | MG     |
| ANDRE   | M    | ANDRE@GLOBO.COM   | CEL  | 99656675 | RUA GUEDES         | CASCADURA  | B. HORIZONTE   | MG     |
| KARLA   | F    | KARLA@GMAIL.COM   | CEL  | 33567765 | RUA VISCONDESSA    | CENTRO     | RIO DE JANEIRO | RJ     |
| KARLA   | F    | KARLA@GMAIL.COM   | CEL  | 88668786 | RUA VISCONDESSA    | CENTRO     | RIO DE JANEIRO | RJ     |
| KARLA   | F    | KARLA@GMAIL.COM   | COM  | 55689654 | RUA VISCONDESSA    | CENTRO     | RIO DE JANEIRO | RJ     |
| DANIELE | F    | DANIELE@GMAIL.COM | COM  | 88687979 | RUA NELSON MANDELA | COPACABANA | RIO DE JANEIRO | RJ     |
| LORENA  | F    | NULL              | COM  | 88965676 | RUA ARAUJO LIMA    | CENTRO     | VITORIA        | ES     |
| ANTONIO | M    | ANTONIO@IG.COM    | CEL  | 89966809 | AV CAPITAO ANTUNES | CENTRO     | CURITIBA       | PR     |
| ANTONIO | M    | ANTONIO@UOL.COM   | COM  | 88679978 | AV CARLOS BARROSO  | JARDINS    | SAO PAULO      | SP     |
| ELAINE  | F    | ELAINE@GLOBO.COM  | CEL  | 99655768 | ALAMEDA SAMPAIO    | BOM RETIRO | CURITIBA       | PR     |
| CARMEM  | F    | CARMEM@IG.COM     | RES  | 89955665 | RUA DA LAPA        | LAPA       | SAO PAULO      | SP     |
| ADRIANA | F    | ADRIANA@GMAIL.COM | RES  | 77455786 | RUA GERONIMO       | CENTRO     | RIO DE JANEIRO | RJ     |
| ADRIANA | F    | ADRIANA@GMAIL.COM | RES  | 89766554 | RUA GERONIMO       | CENTRO     | RIO DE JANEIRO | RJ     |
| JOICE   | F    | JOICE@GMAIL.COM   | RES  | 77755785 | RUA GOMES FREIRE   | CENTRO     | RIO DE JANEIRO | RJ     |
| JOICE   | F    | JOICE@GMAIL.COM   | COM  | 44522578 | RUA GOMES FREIRE   | CENTRO     | RIO DE JANEIRO | RJ     |
+---------+------+-------------------+------+----------+--------------------+------------+----------------+--------+

/*RELATORIO DE HOMENS*/

SELECT C.NOME, C.SEXO, C.EMAIL, T.TIPO, T.NUMERO, E.RUA, E.BAIRRO, E.CIDADE, E.ESTADO
FROM CLIENTE C
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
WHERE SEXO = 'M';

+---------+------+-----------------+------+----------+--------------------+-----------+----------------+--------+
| NOME    | SEXO | EMAIL           | TIPO | NUMERO   | RUA                | BAIRRO    | CIDADE         | ESTADO |
+---------+------+-----------------+------+----------+--------------------+-----------+----------------+--------+
| JOAO    | M    | JOAOA@IG.COM    | CEL  | 87866896 | RUA CAPITAO HERMES | CENTRO    | RIO DE JANEIRO | RJ     |
| JOAO    | M    | JOAOA@IG.COM    | RES  | 99667587 | RUA CAPITAO HERMES | CENTRO    | RIO DE JANEIRO | RJ     |
| JOAO    | M    | JOAOA@IG.COM    | COM  | 66687899 | RUA CAPITAO HERMES | CENTRO    | RIO DE JANEIRO | RJ     |
| CARLOS  | M    | CARLOSA@IG.COM  | COM  | 54768899 | RUA ALFANDEGA      | ESTACIO   | RIO DE JANEIRO | RJ     |
| CARLOS  | M    | CARLOSA@IG.COM  | CEL  | 88687909 | RUA ALFANDEGA      | ESTACIO   | RIO DE JANEIRO | RJ     |
| JORGE   | M    | JORGE@IG.COM    | CEL  | 78458743 | RUA URUGUAIANA     | CENTRO    | VITORIA        | ES     |
| JORGE   | M    | JORGE@IG.COM    | RES  | 56576876 | RUA URUGUAIANA     | CENTRO    | VITORIA        | ES     |
| JORGE   | M    | JORGE@IG.COM    | RES  | 89986668 | RUA URUGUAIANA     | CENTRO    | VITORIA        | ES     |
| ANDRE   | M    | ANDRE@GLOBO.COM | RES  | 68976565 | RUA GUEDES         | CASCADURA | B. HORIZONTE   | MG     |
| ANDRE   | M    | ANDRE@GLOBO.COM | CEL  | 99656675 | RUA GUEDES         | CASCADURA | B. HORIZONTE   | MG     |
| ANTONIO | M    | ANTONIO@IG.COM  | CEL  | 89966809 | AV CAPITAO ANTUNES | CENTRO    | CURITIBA       | PR     |
| ANTONIO | M    | ANTONIO@UOL.COM | COM  | 88679978 | AV CARLOS BARROSO  | JARDINS   | SAO PAULO      | SP     |
+---------+------+-----------------+------+----------+--------------------+-----------+----------------+--------+

/*	RELATORIO DE MULHERES	*/

SELECT C.NOME, C.SEXO, C.EMAIL, T.TIPO, T.NUMERO, E.RUA, E.BAIRRO, E.CIDADE, E.ESTADO
FROM CLIENTE C
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
WHERE SEXO = 'F';

+---------+------+-------------------+------+----------+--------------------+------------+----------------+--------+
| NOME    | SEXO | EMAIL             | TIPO | NUMERO   | RUA                | BAIRRO     | CIDADE         | ESTADO |
+---------+------+-------------------+------+----------+--------------------+------------+----------------+--------+
| ANA     | F    | ANA@IG.COM        | CEL  | 78989765 | RUA PRES VARGAS    | JARDINS    | SAO PAULO      | SP     |
| ANA     | F    | ANA@IG.COM        | CEL  | 99766676 | RUA PRES VARGAS    | JARDINS    | SAO PAULO      | SP     |
| KARLA   | F    | KARLA@GMAIL.COM   | CEL  | 33567765 | RUA VISCONDESSA    | CENTRO     | RIO DE JANEIRO | RJ     |
| KARLA   | F    | KARLA@GMAIL.COM   | CEL  | 88668786 | RUA VISCONDESSA    | CENTRO     | RIO DE JANEIRO | RJ     |
| KARLA   | F    | KARLA@GMAIL.COM   | COM  | 55689654 | RUA VISCONDESSA    | CENTRO     | RIO DE JANEIRO | RJ     |
| DANIELE | F    | DANIELE@GMAIL.COM | COM  | 88687979 | RUA NELSON MANDELA | COPACABANA | RIO DE JANEIRO | RJ     |
| LORENA  | F    | NULL              | COM  | 88965676 | RUA ARAUJO LIMA    | CENTRO     | VITORIA        | ES     |
| ELAINE  | F    | ELAINE@GLOBO.COM  | CEL  | 99655768 | ALAMEDA SAMPAIO    | BOM RETIRO | CURITIBA       | PR     |
| CARMEM  | F    | CARMEM@IG.COM     | RES  | 89955665 | RUA DA LAPA        | LAPA       | SAO PAULO      | SP     |
| ADRIANA | F    | ADRIANA@GMAIL.COM | RES  | 77455786 | RUA GERONIMO       | CENTRO     | RIO DE JANEIRO | RJ     |
| ADRIANA | F    | ADRIANA@GMAIL.COM | RES  | 89766554 | RUA GERONIMO       | CENTRO     | RIO DE JANEIRO | RJ     |
| JOICE   | F    | JOICE@GMAIL.COM   | RES  | 77755785 | RUA GOMES FREIRE   | CENTRO     | RIO DE JANEIRO | RJ     |
| JOICE   | F    | JOICE@GMAIL.COM   | COM  | 44522578 | RUA GOMES FREIRE   | CENTRO     | RIO DE JANEIRO | RJ     |
+---------+------+-------------------+------+----------+--------------------+------------+----------------+--------+

/* QUANTIDADE DE HOMENS E MULHERES*/

SELECT COUNT(*) AS "CLIENTES DO SEXO MASCULINO"
FROM CLIENTE
WHERE SEXO = "M";

+----------------------------+
| CLIENTES DO SEXO MASCULINO |
+----------------------------+
|                          9 |
+----------------------------+

SELECT COUNT(*) AS "CLIENTES DO SEXO FEMININO"
FROM CLIENTE
WHERE SEXO = "F";

+---------------------------+
| CLIENTES DO SEXO FEMININO |
+---------------------------+
|                        11 |
+---------------------------+



/* QUANTIDADE DE HOMENS E MULHERES */

SELECT COUNT(*) AS "QUANTIDADE TOTAL DE CLIENTES"
FROM CLIENTE;

+------------------------------+
| QUANTIDADE TOTAL DE CLIENTES |
+------------------------------+
|                           20 |
+------------------------------+

/*	IDS E EMAIL DAS MULHERES QUE MOREM NO CENTRO DO RIO DE JANEIRO E 
NAO TENHAM CELULAR	*/

SELECT C.IDCLIENTE AS "ID DO CLIENTE", C.EMAIL, E.BAIRRO, E.CIDADE
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
WHERE SEXO = "F" AND
(E.BAIRRO = "CENTRO" AND E.CIDADE = "RIO DE JANEIRO")
AND T.TIPO != "CEL";

+---------------+-------------------+--------+----------------+
| ID DO CLIENTE | EMAIL             | BAIRRO | CIDADE         |
+---------------+-------------------+--------+----------------+
|            11 | KARLA@GMAIL.COM   | CENTRO | RIO DE JANEIRO |
|            19 | ADRIANA@GMAIL.COM | CENTRO | RIO DE JANEIRO |
|            19 | ADRIANA@GMAIL.COM | CENTRO | RIO DE JANEIRO |
|            20 | JOICE@GMAIL.COM   | CENTRO | RIO DE JANEIRO |
|            20 | JOICE@GMAIL.COM   | CENTRO | RIO DE JANEIRO |
+---------------+-------------------+--------+----------------+

/*
	PARA FAZER O UPDATE DE VARIOS CLIENTES
*/

/* 12 13 18 19  */

SELECT * FROM CLIENTE
WHERE IDCLIENTE = 12
OR IDCLIENTE = 13
OR IDCLIENTE = 18
OR IDCLIENTE = 19;

SELECT * FROM CLIENTE
WHERE IDCLIENTE IN (12,13,18,19);

UPDATE CLIENTE SET SEXO = 'F'
WHERE IDCLIENTE IN (12,13,18,19);

/* PARA UMA CAMPANHA DE MARKETING, O SETOR SOLICITOU UM
RELATÓRIO COM O NOME, EMAIL E TELEFONE CELULAR 
DOS CLIENTES QUE MORAM NO ESTADO DO RIO DE JANEIRO 
VOCÊ TERÁ QUE PASSAR A QUERY PARA GERAR O RELATORIO PARA
O PROGRAMADOR */

SELECT C.NOME, C.EMAIL, T.NUMERO AS CELULAR
FROM CLIENTE C
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
WHERE E.ESTADO = "RJ" AND T.TIPO = "CEL";

/*
	FUNÇÕES
*/

IFNULL()

SELECT  C.NOME, 
		IFNULL(C.EMAIL,'NAO TEM EMAIL') AS "E-MAIL",   -- A PALAVRA NAO TEM EMAIL ESTAVA APARECENDO TMB NO CABEÇALHO, POR ISSO CHAMAMOS A FUNÇÃO AS
		E.ESTADO, 
		T.NUMERO
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE;



SELECT  C.NOME, 
		C.SEXO, 
		C.EMAIL, 
		T.TIPO, 
		T.NUMERO, 
		E.BAIRRO, 
		E.CIDADE, 
		E.ESTADO
FROM CLIENTE C 
INNER JOIN TELEFONE T 
ON C.IDCLIENTE = T.ID_CLIENTE 
INNER JOIN ENDERECO E 
ON C.IDCLIENTE = E.ID_CLIENTE;

CREATE VIEW V_RELATORIO AS  -- CRIANDO A FUNÇÃO
SELECT  C.NOME, 
		C.SEXO, 
		IFNULL(C.EMAIL, "CLIENTE NAO TEM E-MAIL") AS "E-MAIL",
		T.TIPO, 
		T.NUMERO, 
		E.BAIRRO, 
		E.CIDADE, 
		E.ESTADO
FROM CLIENTE C 
INNER JOIN TELEFONE T 
ON C.IDCLIENTE = T.ID_CLIENTE 
INNER JOIN ENDERECO E 
ON C.IDCLIENTE = E.ID_CLIENTE;

SELECT * FROM V_RELATORIO;   -- PARA CHAMAR A FUNÇÃO

-- TMB PODE SE USAR A VIEW DENTRO DE UM SELECT

SELECT NOME, NUMERO, ESTADO
FROM V_RELATORIO;




/* UPDATE, INSERT E DELETE - DML */
--NÃO SE PODE FAZER INSERT NEM DELETE EM VIEWS COM JOIN!!!    UPDATE PODE
--QUANDO NAO A JOIN NA VIEW PODE-SE INSERIR OU DELETAR

INSERT INTO V_RELATORIO VALUES(
'ANDREIA','F','ANDREIA@UOL.COM.BR','CEL','873547864','CENTRO','VITORIA','ES'
);

ERROR 1394 (HY000): Can not insert into join view 'comercio.v_relatorio' without fields list
ERROR 1395 (HY000): Can not delete from join view 'comercio.v_relatorio'

DELETE FROM V_RELATORIO WHERE NOME = 'JORGE';


--EXEMPLO DE INSERT E UPDATE COM UMA VIEW QUE NAO TEM JOIN

CREATE TABLE JOGADORES(
	IDJOGADOR INT,
	NOME VARCHAR(30),
	ESTADO CHAR(2)
);

CREATE VIEW V_JOGADORES AS
SELECT NOME, ESTADO
FROM JOGADORES;

INSERT INTO V_JOGADORES VALUES('GUERRERO','RS');  -- INSERÇÃO COM UMA VIEW

--SELEÇÃO COM UMA VIEW
SELECT * FROM V_RELATORIO
WHERE SEXO = 'F';

/*
	ORDENANDO DADOS 
*/

/* ORDER BY */

CREATE TABLE ALUNOS(
	NUMERO INT,
	NOME VARCHAR(30)
);

INSERT INTO ALUNOS VALUES(1,'JOAO');
INSERT INTO ALUNOS VALUES(1,'MARIA');
INSERT INTO ALUNOS VALUES(2,'ZOE');
INSERT INTO ALUNOS VALUES(2,'ANDRE');
INSERT INTO ALUNOS VALUES(3,'CLARA');
INSERT INTO ALUNOS VALUES(1,'CLARA');
INSERT INTO ALUNOS VALUES(4,'MAFRA');
INSERT INTO ALUNOS VALUES(5,'JANAINA');
INSERT INTO ALUNOS VALUES(1,'JANAINA');
INSERT INTO ALUNOS VALUES(3,'MARCELO');
INSERT INTO ALUNOS VALUES(4,'GIOVANI');
INSERT INTO ALUNOS VALUES(5,'ANTONIO');
INSERT INTO ALUNOS VALUES(6,'ANA');
INSERT INTO ALUNOS VALUES(6,'VIVIANE'); 

SELECT * FROM ALUNOS
ORDER BY NUMERO;

SELECT * FROM ALUNOS
ORDER BY 1;

SELECT * FROM ALUNOS
ORDER BY 2;

/* ORDENANDO POR MAIS DE UMA COLUNA */

SELECT * FROM ALUNOS
ORDER BY 1;

SELECT * FROM ALUNOS
ORDER BY NUMERO, NOME;

SELECT * FROM ALUNOS
ORDER BY 1, 2;

/* MESCLANDO ORDER BY COM PROJECAO */

SELECT NOME FROM ALUNOS
ORDER BY 1, 2;

SELECT NOME FROM ALUNOS
ORDER BY NUMERO, NOME;


/* ORDER BY DESC / ASC */

SELECT * FROM ALUNOS
ORDER BY 1, 2;

SELECT * FROM ALUNOS
ORDER BY 1 ASC;

SELECT * FROM ALUNOS
ORDER BY 1 DESC;

SELECT * FROM ALUNOS
ORDER BY 1, 2 DESC;

SELECT * FROM ALUNOS
ORDER BY 1 DESC, 2 DESC;

/* ORDENANDO COM JOINS */


SELECT  C.NOME, 
		C.SEXO, 
		IFNULL(C.EMAIL,'CLIENTE SEM EMAIL') AS "E-MAIL", 
		T.TIPO, 
		T.NUMERO, 
		E.BAIRRO, 
		E.CIDADE, 
		E.ESTADO
FROM CLIENTE C 
INNER JOIN TELEFONE T 
ON C.IDCLIENTE = T.ID_CLIENTE 
INNER JOIN ENDERECO E 
ON C.IDCLIENTE = E.ID_CLIENTE
ORDER BY 1;

SHOW TABLES;

SELECT * FROM V_RELATORIO
ORDER BY 1;

/* Delimitador */

STATUS  --PARA VERIFICAR VARIAS COISAS, POR EXEMPLO DA PARA VERIFICAR QUAL É O LIMITADOR QUE ESTA SENDO USADO NO MOMENTO

DELIMITER $



/* STORED PROCEDURES */

SELECT 'MAFRA';

DELIMITER $   -- PARA MUDAR O DELIMITADOR

CREATE PROCEDURE NOME_EMPRESA()
BEGIN
	
	SELECT 'UNIVERSIDADE DOS DADOS' AS EMPRESA;

END
$

/* CHAMANDO UMA PROCEDURE */

CALL NOME_EMPRESA()$   --NESTE CASO AINDA NAO MUDAMOS O DELIMITADOR, ENTAO ESTA SENDO USADO O DOLAR, MAS PODERIA TER SIDO MUDADO PARA O PADRÃO NOVAMENTE ANTES DE CHAMAR A CALL



/* PROCEDURES COM PARAMETROS */
DELIMITER $

CREATE PROCEDURE CONTA(NUMERO1 INT, NUMERO2 INT)
BEGIN
	
	SELECT NUMERO1 + NUMERO2 AS CONTA;

END
$

CALL CONTA(100,50)$

DROP PROCEDURE CONTA;



-- PROCEDURES

CREATE DATABASE PROJETO;

USE PROJETO;

CREATE TABLE CURSOS(
	IDCURSO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30) NOT NULL,
	HORAS INT(3) NOT NULL,
	VALOR FLOAT(10,2) NOT NULL
);

INSERT INTO CURSOS VALUES(NULL, 'JAVA', 30, 500.00);
INSERT INTO CURSOS VALUES(NULL,'FUNDAMENTOS DE BANCOS DE DADOS',40,700.00);

DELIMITER #

STATUS

CREATE PROCEDURE CAD_CURSO(P_NOME VARCHAR(30),
						   P_HORAS INT(30),
						   P_PRECO FLOAT(10,2))
BEGIN
	INSERT INTO CURSOS VALUES(NULL, P_NOME, P_HORAS, P_PRECO);
END
#

DELIMITER ;

CALL CAD_CURSO('BI SQL SERVER', 35, 3000.00);
CALL CAD_CURSO('POWER BI', 20, 1000.00);
CALL CAD_CURSO('TABLEU', 30, 1200.00);



--EXERCICIO:
--    CRIAR UMA PROCEDURE PARA CONSULTAR CURSOS

SELECT NOME, HORAS, VALOR     --PRIMEIRO CRIANDO A QUERY DE TESTE
FROM CURSOS
WHERE NOME = 'TABLEU';

DELIMITER $

CREATE PROCEDURE CONSULTA_CURSO(P_NOME_CURSO VARCHAR(30))                   
BEGIN
	SELECT C.NOME, C.HORAS, C.VALOR
	FROM CURSOS C
	WHERE C.NOME = P_NOME_CURSO;
END
$

DELIMITER ;

CALL CONSULTA_CURSO('BI SQL SERVER');




/* A29 FUNCOES DE AGREGACAO NUMERICAS */

CREATE TABLE VENDEDORES(
	IDVENDEDOR INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	SEXO CHAR(1),
	JANEIRO FLOAT(10,2),
	FEVEREIRO FLOAT(10,2),
	MARCO FLOAT(10,2)
);

INSERT INTO VENDEDORES VALUES(NULL,'CARLOS','M',76234.78,88346.87,5756.90);
INSERT INTO VENDEDORES VALUES(NULL,'MARIA','F',5865.78,6768.87,4467.90);
INSERT INTO VENDEDORES VALUES(NULL,'ANTONIO','M',78769.78,6685.87,6664.90);
INSERT INTO VENDEDORES VALUES(NULL,'CLARA','F',5779.78,446886.87,8965.90);
INSERT INTO VENDEDORES VALUES(NULL,'ANDERSON','M',676545.78,77544.87,578665.90);
INSERT INTO VENDEDORES VALUES(NULL,'IVONE','F',57789.78,44774.87,68665.90);
INSERT INTO VENDEDORES VALUES(NULL,'JOAO','M',4785.78,66478.87,6887.90);
INSERT INTO VENDEDORES VALUES(NULL,'CELIA','F',89667.78,57654.87,5755.90);

/* MAX - TRAZ O VALOR MAXIMO DE UMA COLUNA */

SELECT MAX(FEVEREIRO) AS MAIOR_FEV
FROM VENDEDORES;


/* MIN - TRAZ O VALOR MINIMO DE UMA COLUNA */

SELECT MIN(FEVEREIRO) AS MENOR_FEV
FROM VENDEDORES;

/* AVG - TRAZ O VALOR MEDIO DE UMA COLUNA */

SELECT AVG(FEVEREIRO) AS MEDIA_FEV
FROM VENDEDORES;

/* VARIAS FUNCOES */

SELECT MAX(JANEIRO) AS MAX_JAN,
       MIN(JANEIRO) AS MIN_JAN,
	   AVG(JANEIRO) AS MEDIA_JAN
	   FROM VENDEDORES;
	 
/*TRUNCATE */
	 
SELECT MAX(JANEIRO) AS MAX_JAN,
       MIN(JANEIRO) AS MIN_JAN,
	   TRUNCATE(AVG(JANEIRO),2) AS MEDIA_JAN
	   FROM VENDEDORES;


/* A30 - AGREGANDO COM SUM() */

SELECT SUM(JANEIRO) AS TOTAL_JAN
FROM VENDEDORES;

SELECT SUM(JANEIRO) AS TOTAL_JAN,
	   SUM(FEVEREIRO) AS TOTAL_FEV,
	   SUM(MARCO) AS TOTAL_MAR
FROM VENDEDORES;

/* VENDAS POR SEXO */

SELECT SEXO, SUM(MARCO) AS TOTAL_MARCO
FROM VENDEDORES
GROUP BY SEXO;


/*
	EXERCICIO: 
		VENDEDOR QUE VENDEU MENOS EM MARÇO E O SEU NOME
*/

SELECT NOME, MARCO FROM VENDEDORES
WHERE MARCO = (
	SELECT MIN(MARCO)
	FROM VENDEDORES
);




/*
	NOME E O VALOR QUE VENDEU MAIS EM MARCO
*/

SELECT NOME, MARCO FROM VENDEDORES
WHERE MARCO = (
	SELECT MAX(MARCO)
	FROM VENDEDORES
);




/*
	QUEM VENDEU MAIS QUE O VALOR MEDIO DE FEVEREIRO
*/

SELECT NOME, FEVEREIRO FROM VENDEDORES
WHERE FEVEREIRO > (
	SELECT AVG(FEVEREIRO)              --INNER QUERY, ESSA QUERY É REESOLVIDA PRIMEIRO
	FROM VENDEDORES
);



/* A32 - OPERACOES EM LINHA */

SELECT * FROM VENDEDORES;

SELECT NOME,
	   JANEIRO,
	   FEVEREIRO,
	   MARCO,
	   (JANEIRO+FEVEREIRO+MARCO) AS "TOTAL",
	   TRUNCATE((JANEIRO+FEVEREIRO+MARCO)/3,2) AS "MEDIA"
	   FROM VENDEDORES;
	   
/* APLICANDO UM % */

SELECT NOME,
	   JANEIRO,
	   FEVEREIRO,
	   MARCO,
	   (JANEIRO+FEVEREIRO+MARCO) AS "TOTAL",
	   (JANEIRO+FEVEREIRO+MARCO) * .25 AS "DESCONTO",
	   TRUNCATE((JANEIRO+FEVEREIRO+MARCO)/3,2) AS "MEDIA"
	   FROM VENDEDORES;

	   
/* A33 - ALTERANDO TABELAS */

CREATE TABLE TABELA(
	COLUNA1 VARCHAR(30),
	COLUNA2 VARCHAR(30),
	COLUNA3 VARCHAR(30)
);

CREATE TABLE TABELA(
	COLUNA1 INT PRIMARY KEY AUTO_INCREMENT
);

--ADICIONANDO UMA PK                      NAO É POSSIVEL ACRESCENTAR AUTO_INCREMENTE POSTERIORMENTE
ALTER TABLE TABELA 
ADD PRIMARY KEY (COLUNA1);



--ADICIONANDO COLUNA SEM POSICAO. ULTIMA POSICAO
ALTER TABLE TABELA 
ADD COLUNA varchar(30);

ALTER TABLE TABELA 
ADD COLUNA100 INT;


--ADICIONANDO UMA COLUNA COM POSICAO
ALTER TABLE TABELA 
ADD COLUMN COLUNA4 VARCHAR(30) NOT NULL UNIQUE
AFTER COLUNA3;

--MODIFICANDO O TIPO DE UM CAMPO
ALTER TABLE TABELA
 MODIFY COLUNA2 DATE NOT NULL;


--RENOMEANDO O NOME DA TABELA
ALTER TABLE TABELA 
RENAME PESSOA;

CREATE TABLE TIME(
	IDTIME INT PRIMARY KEY AUTO_INCREMENT,
	TIME VARCHAR(30),
	ID_PESSOA VARCHAR(30)
);

--Foreign key
ALTER TABLE TIME 
ADD FOREIGN KEY(ID_PESSOA)
REFERENCES PESSOA(COLUNA1);

/* VERIFICAR AS CHAVES */
SHOW CREATE TABLE TIME;



/* A34 - ORGANIZACAO DE CHAVES - CONSTRAINT (REGRA) */

CREATE TABLE JOGADOR(
	IDJOGADOR INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30)
);

CREATE TABLE TIMES(
	IDTIME INT PRIMARY KEY AUTO_INCREMENT,
	NOMETIME VARCHAR(30),
	ID_JOGADOR INT,
	FOREIGN KEY(ID_JOGADOR)
	REFERENCES JOGADOR(IDJOGADOR)
);

INSERT INTO JOGADOR VALUES(NULL,'GUERRERO');
INSERT INTO TIMES VALUES(NULL,'FLAMENGO',1);

SHOW CREATE TABLE JOGADOR;
SHOW CREATE TABLE TIMES;


/* A35 - ORGANIZANDO CHAVES
 */


CREATE TABLE CLIENTE(
	IDCLIENTE INT,
	NOME VARCHAR(30) NOT NULL
);

CREATE TABLE TELEFONE(
	IDTELEFONE INT,
	TIPO CHAR(3) NOT NULL,
	NUMERO VARCHAR(10) NOT NULL,
	ID_CLIENTE INT
);

ALTER TABLE CLIENTE ADD CONSTRAINT PK_CLIENTE
PRIMARY KEY(IDCLIENTE);

ALTER TABLE TELEFONE ADD CONSTRAINT FK_CLIENTE_TELEFONE
FOREIGN KEY(ID_CLIENTE) REFERENCES CLIENTE(IDCLIENTE);

SHOW CREATE TABLE TELEFONE;



/* DICIONARIO DE DADOS */

SHOW DATABASES;

USE INFORMATION_SCHEMA;

STATUS

SHOW TABLES;

DESC TABLE_CONSTRAINTS;

SELECT CONSTRAINT_SCHEMA AS "BANCO",
	   TABLE_NAME AS "TABELA",
	   CONSTRAINT_NAME AS "NOME REGRA",
	   CONSTRAINT_TYPE AS "TIPO"
	   FROM TABLE_CONSTRAINTS
	   WHERE CONSTRAINT_SCHEMA = 'PROJETO';


/*
	APAGANDO CONSTRAINTS
*/

USE COMERCIO;

ALTER TABLE TELEFONE
DROP FOREIGN KEY FK_CLIENTE_TELEFONE;

ALTER TABLE  TELEFONE ADD CONSTRAINT FK_CLIENTE_TELEFONE
FOREIGN KEY(ID_CLIENTE) REFERENCES CLIENTE(IDCLIENTE);

/*
	REVISANDO RELACIONAMENTOS
*/

-- A CHAVE ESTRANGEIRA SEMPRE FICARA NA TABELA MAIS FRACA, ISSO DEPENDE DA REGRA DE NEGOCIO

-- EM RELACIONAMENTOS 1 PARA N, A CHAVE ESTRANGEIRA SEMPRE FICARA NA  TABELA N

-- EM RELACIONAMENTOS N PARA N,   PRECISAREMOS DE UMA TABELA ASSOCIATIVA, ONDE FICARA A CHAVE ASSOCIATIVA


/*
	EXERCICIOS DE FIXAÇÃO
*/

-- 1 CRIE UMA BANCO DE DADOS CHAMADO PROJETO E CONECTE-SE AO BANCO
-- 2 FAÇA A SEGUINTE MODELAGEM:
--        
-- SR JOSE QUER MODERNIZAR A SUA OFICINA, E POR ENQUANTO, 
--CADASTRAR OS CARROS QUE ENTRAM PARA REALIZAR
-- SERVIÇOES E OS SEUS RESPECTIVOS DONOS.

--		 SR.JOSE MENCIONOU QUE CADA CLIENTE POSSUI APENAS UM CARRO.
-- UM CARRO POSSUI UMA MARCA
-- 		SR.JOSE TAMBEM QUER SABER AS CORES DOS CARROS PARA TER IDEIA DE QUAL TINTA COMPRAR, E INFORMA QUE
-- UM CARRO PODE TER MAIS DE UMA COR
--		SR.JOSE NESCESSITA ARMAZENAR OS TELEFONES DOS CLIENTES, MAS NAO QUER QUE ELES SEJA OBRIGATORIOS.



-- 1 CRIE UMA BANCO DE DADOS CHAMADO PROJETO E CONECTE-SE AO BANCO

CREATE DATABASE OFICINA;

USE OFICINA;

CREATE TABLE CLIENTE(
	IDCLIENTE INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30) NOT NULL,
	ID_CARRO INT UNIQUE
);

CREATE TABLE TELEFONE(
	IDTELEFONE INT PRIMARY KEY AUTO_INCREMENT ,
	TIPO ENUM('CEL', 'RES', 'COM') NOT NULL,
	NUMERO VARCHAR(10) NOT NULL,
	ID_CLIENTE INT UNIQUE
);

CREATE TABLE CARRO(
	IDCARRO INT PRIMARY KEY AUTO_INCREMENT,
	MODELO VARCHAR(30) NOT NULL,
	PLACA VARCHAR(30) NOT NULL UNIQUE,
	ID_COR_CARRO INT,
	ID_MARCA_CARRO INT
);

CREATE TABLE COR(
	IDCOR INT PRIMARY KEY AUTO_INCREMENT,
	COR VARCHAR(30) UNIQUE
);

CREATE TABLE COR_CARRO(
	ID_COR INT,
	ID_CARRO INT,
	PRIMARY KEY(ID_COR,ID_CARRO)
);

CREATE TABLE MARCA_CARRO(
	IDMARCA_CARRO INT PRIMARY KEY AUTO_INCREMENT,
	MARCA VARCHAR(30) UNIQUE
);

ALTER TABLE TELEFONE 
ADD CONSTRAINT FK_TELEFONE_CLIENTE
FOREIGN KEY(ID_CLIENTE)
REFERENCES CLIENTE(IDCLIENTE);

ALTER TABLE CLIENTE
ADD CONSTRAINT FK_CLIENTE_CARRO
FOREIGN KEY(ID_CARRO)
REFERENCES CARRO(IDCARRO);          

ALTER TABLE CARRO
ADD CONSTRAINT FK_CARRO_MARCA_CARRO
FOREIGN KEY(ID_MARCA_CARRO)
REFERENCES MARCA_CARRO(IDMARCA_CARRO);

ALTER TABLE COR_CARRO
ADD CONSTRAINT FK_COR_CARRO_CARRO
FOREIGN KEY(ID_CARRO)
REFERENCES CARRO(IDCARRO);

ALTER TABLE COR_CARRO
ADD CONSTRAINT FK_COR_CARRO_COR
FOREIGN KEY(ID_COR)
REFERENCES COR(IDCOR);

-- ADICIONANDO MARCA DE CARRO
+---------------+-------------+------+-----+---------+----------------+
| Field         | Type        | Null | Key | Default | Extra          |
+---------------+-------------+------+-----+---------+----------------+
| IDMARCA_CARRO | int(11)     | NO   | PRI | NULL    | auto_increment |
| MARCA         | varchar(30) | YES  | UNI | NULL    |                |
+---------------+-------------+------+-----+---------+----------------+
INSERT INTO MARCA_CARRO VALUES(NULL, 'CHEVROLET GM');

--ADICIONANDO COR
+-------+-------------+------+-----+---------+----------------+
| Field | Type        | Null | Key | Default | Extra          |
+-------+-------------+------+-----+---------+----------------+
| IDCOR | int(11)     | NO   | PRI | NULL    | auto_increment |
| COR   | varchar(30) | YES  | UNI | NULL    |                |
+-------+-------------+------+-----+---------+----------------+
INSERT INTO COR VALUES(NULL, 'PRETO');


--ADICIONANDO CARRO
+----------------+-------------+------+-----+---------+----------------+
| Field          | Type        | Null | Key | Default | Extra          |
+----------------+-------------+------+-----+---------+----------------+
| IDCARRO        | int(11)     | NO   | PRI | NULL    | auto_increment |
| MODELO         | varchar(30) | NO   |     | NULL    |                |
| PLACA          | varchar(30) | NO   | UNI | NULL    |                |
| ID_COR_CARRO   | int(11)     | YES  |     | NULL    |                |
| ID_MARCA_CARRO | int(11)     | YES  | MUL | NULL    |                |
+----------------+-------------+------+-----+---------+----------------+
+---------------+--------------+
| IDMARCA_CARRO | MARCA        |
+---------------+--------------+
|             1 | CHEVROLET GM |
+---------------+--------------+
INSERT INTO CARRO VALUES(NULL, 'OPALA', 'SNX 0102', 1, 1);


--ADICIONANDO COR DE CARRO
+----------+---------+------+-----+---------+-------+
| Field    | Type    | Null | Key | Default | Extra |
+----------+---------+------+-----+---------+-------+
| ID_COR   | int(11) | NO   | PRI | NULL    |       |
| ID_CARRO | int(11) | NO   | PRI | NULL    |       |
+----------+---------+------+-----+---------+-------+
INSERT INTO COR_CARRO VALUES(1, 2);



--ADICIONANDO CLIENTE
mysql> DESC CLIENTE;
+-----------+-------------+------+-----+---------+----------------+
| Field     | Type        | Null | Key | Default | Extra          |
+-----------+-------------+------+-----+---------+----------------+
| IDCLIENTE | int(11)     | NO   | PRI | NULL    | auto_increment |
| NOME      | varchar(30) | NO   |     | NULL    |                |
| ID_CARRO  | int(11)     | YES  | UNI | NULL    |                |
+-----------+-------------+------+-----+---------+----------------+
INSERT INTO CLIENTE VALUES(NULL, 'DAVID', 2);


--ADICIONANDO TELEFONE DO CLIENTE
mysql> DESC TELEFONE;
+------------+-------------------------+------+-----+---------+----------------+
| Field      | Type                    | Null | Key | Default | Extra          |
+------------+-------------------------+------+-----+---------+----------------+
| IDTELEFONE | int(11)                 | NO   | PRI | NULL    | auto_increment |
| TIPO       | enum('CEL','RES','COM') | NO   |     | NULL    |                |
| NUMERO     | varchar(10)             | NO   |     | NULL    |                |
| ID_CLIENTE | int(11)                 | YES  | UNI | NULL    |                |
+------------+-------------------------+------+-----+---------+----------------+
mysql> SELECT * FROM CLIENTE;
+-----------+-------+----------+
| IDCLIENTE | NOME  | ID_CARRO |
+-----------+-------+----------+
|         2 | DAVID |        2 |
+-----------+-------+----------+
INSERT INTO TELEFONE VALUES(NULL, 'CEL', '959587373', 2);

-- TESTANDO AS REGRAS DE NEGOCIOS DA OFICINA



--SR.JOSE MENCIONOU QUE CADA CLIENTE POSSUI APENAS UM CARRO
-- TENTAR COLOCAR MAIS DE UM CARRO PARA UM CLIENTE:

mysql> SELECT * FROM CARRO; -- VERIFICANDO OS CARROS CADASTRADOS NO BANCO DE DADOS
+---------+--------+----------+--------------+----------------+
| IDCARRO | MODELO | PLACA    | ID_COR_CARRO | ID_MARCA_CARRO |
+---------+--------+----------+--------------+----------------+
|       2 | ONIX   | FBW 0102 |            1 |              1 |
|       3 | OPALA  | SNX 0102 |            1 |              1 |
+---------+--------+----------+--------------+----------------+
-- não há campos para atribuir mais de um carro para cada dono



-- -- UM CARRO POSSUI UMA MARCA
--nao há campos para  adicionar mais de uma marca para um carro



--SR.JOSE TAMBEM QUER SABER AS CORES DOS CARROS PARA TER IDEIA DE QUAL TINTA COMPRAR


-- select de todos os dados do cliente
+----------------+-------------+------+-----+---------+----------------+
| Field          | Type        | Null | Key | Default | Extra          |
+----------------+-------------+------+-----+---------+----------------+
| IDCARRO        | int(11)     | NO   | PRI | NULL    | auto_increment |
| MODELO         | varchar(30) | NO   |     | NULL    |                |
| PLACA          | varchar(30) | NO   | UNI | NULL    |                |
| ID_COR_CARRO   | int(11)     | YES  |     | NULL    |                |
| ID_MARCA_CARRO | int(11)     | YES  | MUL | NULL    |                |
+----------------+-------------+------+-----+---------+----------------+

--VERIFICANDO OS CARROS CADASTRADOS
mysql> SELECT * FROM CARRO;
+---------+--------+----------+--------------+----------------+
| IDCARRO | MODELO | PLACA    | ID_COR_CARRO | ID_MARCA_CARRO |
+---------+--------+----------+--------------+----------------+
|       2 | ONIX   | FBW 0102 |            1 |              1 |
|       3 | OPALA  | SNX 0102 |            1 |              1 |
+---------+--------+----------+--------------+----------------+

-- VERIFICANDO CLIENTES
mysql> SELECT * FROM CLIENTE;
+-----------+-------+----------+
| IDCLIENTE | NOME  | ID_CARRO |
+-----------+-------+----------+
|         2 | DAVID |        2 |
+-----------+-------+----------+

-- DESC NA TABELA COR
+-------+-------------+------+-----+---------+----------------+
| Field | Type        | Null | Key | Default | Extra          |
+-------+-------------+------+-----+---------+----------------+
| IDCOR | int(11)     | NO   | PRI | NULL    | auto_increment |
| COR   | varchar(30) | YES  | UNI | NULL    |                |
+-------+-------------+------+-----+---------+----------------+

-- DESC NA TABELA COR_CARRO
+----------+---------+------+-----+---------+-------+
| Field    | Type    | Null | Key | Default | Extra |
+----------+---------+------+-----+---------+-------+
| ID_COR   | int(11) | NO   | PRI | NULL    |       |
| ID_CARRO | int(11) | NO   | PRI | NULL    |       |
+----------+---------+------+-----+---------+-------+

SELECT IDCLIENTE,
	   C.NOME,
	   T.TIPO,
	   T.NUMERO,
	   CA.MODELO,
	   CA.PLACA,
	   CR.COR
FROM CLIENTE C
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
INNER JOIN CARRO CA
ON C.IDCLIENTE = CA.IDCARRO
INNER JOIN COR_CARRO C_C
ON C.IDCLIENTE = C_C.ID_CARRO
INNER JOIN COR CR
ON CR.IDCOR = C_C.ID_COR; 

+-----------+-------+------+-----------+--------+----------+-------+
| IDCLIENTE | NOME  | TIPO | NUMERO    | MODELO | PLACA    | COR   |
+-----------+-------+------+-----------+--------+----------+-------+
|         2 | DAVID | CEL  | 959587373 | ONIX   | FBW 0102 | PRETO |
+-----------+-------+------+-----------+--------+----------+-------+


-- UM CARRO PODE TER MAIS DE UMA COR
--ACRESCENTAR MAIS UMA COR AO CARRO DE ID 2, ONIX DE DAVID

-- INSERINDO MAIS UMA COR DE TINTA
mysql> DESC COR;
+-------+-------------+------+-----+---------+----------------+
| Field | Type        | Null | Key | Default | Extra          |
+-------+-------------+------+-----+---------+----------------+
| IDCOR | int(11)     | NO   | PRI | NULL    | auto_increment |
| COR   | varchar(30) | YES  | UNI | NULL    |                |
+-------+-------------+------+-----+---------+----------------+

INSERT INTO COR VALUES(NULL, 'AMARELO');

mysql> DESC COR_CARRO;
+----------+---------+------+-----+---------+-------+
| Field    | Type    | Null | Key | Default | Extra |
+----------+---------+------+-----+---------+-------+
| ID_COR   | int(11) | NO   | PRI | NULL    |       |
| ID_CARRO | int(11) | NO   | PRI | NULL    |       |
+----------+---------+------+-----+---------+-------+

mysql> SELECT * FROM COR;
+-------+---------+
| IDCOR | COR     |
+-------+---------+
|     2 | AMARELO |
|     1 | PRETO   |
+-------+---------+

mysql> SELECT * FROM CARRO;
+---------+--------+----------+--------------+----------------+
| IDCARRO | MODELO | PLACA    | ID_COR_CARRO | ID_MARCA_CARRO |
+---------+--------+----------+--------------+----------------+
|       2 | ONIX   | FBW 0102 |            1 |              1 |
|       3 | OPALA  | SNX 0102 |            1 |              1 |
+---------+--------+----------+--------------+----------------+

INSERT INTO COR_CARRO VALUES(2, 2);

--VERIFICANDO

mysql> SELECT IDCLIENTE,
    ->    C.NOME,
    ->    T.TIPO,
    ->    T.NUMERO,
    ->    CA.MODELO,
    ->    CA.PLACA,
    ->    CR.COR
    -> FROM CLIENTE C
    -> INNER JOIN TELEFONE T
    -> ON C.IDCLIENTE = T.ID_CLIENTE
    -> INNER JOIN CARRO CA
    -> ON C.IDCLIENTE = CA.IDCARRO
    -> INNER JOIN COR_CARRO C_C
    -> ON C.IDCLIENTE = C_C.ID_CARRO
    -> INNER JOIN COR CR
    -> ON CR.IDCOR = C_C.ID_COR;
+-----------+-------+------+-----------+--------+----------+---------+
| IDCLIENTE | NOME  | TIPO | NUMERO    | MODELO | PLACA    | COR     |
+-----------+-------+------+-----------+--------+----------+---------+
|         2 | DAVID | CEL  | 959587373 | ONIX   | FBW 0102 | PRETO   |
|         2 | DAVID | CEL  | 959587373 | ONIX   | FBW 0102 | AMARELO |
+-----------+-------+------+-----------+--------+----------+---------+

-- TENTANDO COLOCAR UM NOVO CLIENTE, COM UM CARRO QUE JÁ TEM DONO:

+-----------+-------------+------+-----+---------+----------------+
| Field     | Type        | Null | Key | Default | Extra          |
+-----------+-------------+------+-----+---------+----------------+
| IDCLIENTE | int(11)     | NO   | PRI | NULL    | auto_increment |
| NOME      | varchar(30) | NO   |     | NULL    |                |
| ID_CARRO  | int(11)     | YES  | UNI | NULL    |                |
+-----------+-------------+------+-----+---------+----------------+

mysql> INSERT INTO CLIENTE VALUES(NULL,'RENATA',2);
ERROR 1062 (23000): Duplicate entry '2' for key 'ID_CARRO'
-- NAO FOI POSSIVEL, ESTA CORRETO

/*
	TRIGGERS
	TRIGGERS SIGNNIFICA GATILHOS, OU SEJA, EXECUTE ALGUMA COISA APOS O GATILHO
*/
/* ESTRUTURA DE UMA TRIGGER */

CREATE TRIGGER NOME
BEFORE/AFTER INSERT/DELETE/UPDATE ON TABELA
FOR EACH ROW (PARA CADA LINHA)
BEGIN -> INICIO

		QUALQUER COMANDO SQL

END -> FIM


CREATE DATABASE TRIGGERS;

USE TRIGGERS;

CREATE TABLE USUARIO(
	IDUSUARIO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	LOGIN VARCHAR(30),
	SENHA VARCHAR(100)
);

CREATE TABLE BKP_USUARIO(
	IDBACKUP INT PRIMARY KEY AUTO_INCREMENT,
	IDUSUARIO INT,
	NOME VARCHAR(30),
	LOGIN VARCHAR(30)
);

/* CRIANDO A TRIGGER */

DELIMITER $

CREATE TRIGGER BACKUP_USER
BEFORE DELETE ON USUARIO
FOR EACH ROW 
BEGIN
		
	INSERT INTO BKP_USUARIO VALUES
	(NULL,OLD.IDUSUARIO,OLD.NOME,OLD.LOGIN);
END
$

INSERT INTO USUARIO VALUES(NULL,'ANDRADE','ANDRADE2009','HEXACAMPEAO')$

DELIMITER ;


mysql> SELECT * FROM USUARIO;
+-----------+---------+-------------+-------------+
| IDUSUARIO | NOME    | LOGIN       | SENHA       |
+-----------+---------+-------------+-------------+
|         1 | ANDRADE | ANDRADE2009 | HEXACAMPEAO |
+-----------+---------+-------------+-------------+


DELETE FROM USUARIO WHERE IDUSUARIO = 1;


mysql> SELECT * FROM BKP_USUARIO;
+----------+-----------+---------+-------------+
| IDBACKUP | IDUSUARIO | NOME    | LOGIN       |
+----------+-----------+---------+-------------+
|        1 |         1 | ANDRADE | ANDRADE2009 |
+----------+-----------+---------+-------------+


/* A 41 - COMUNICACAO ENTRE BANCOS */

CREATE DATABASE LOJA;

USE LOJA;

CREATE TABLE PRODUTO(
	IDPRODUTO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	VALOR FLOAT(10,2)
);

CREATE DATABASE BACKUP;

USE BACKUP;

CREATE TABLE BKP_PRODUTO(
	IDBKP INT PRIMARY KEY AUTO_INCREMENT,
	IDPRODUTO INT,
	NOME VARCHAR(30),
	VALOR FLOAT(10,2)
);

USE LOJA;

DELIMITER $
-- TODA VEZ QUE UM PRODUTO É INSERIDO, É CRIADO UMA COPIA NO BANCO BACKUP
/*
	NESTE PRIMEIRO CASO, O DADO É INSERIDO NA TABELA BACKUP "BEFORE INSERT" OU SEJA, ANTES DE SER INSERIDO.. E O ID AINDA NAO FOI CRIADO
*/
CREATE TRIGGER BACKUP_PRODUT
BEFORE INSERT ON PRODUTO
FOR EACH ROW
BEGIN
	
	INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL,NEW.IDPRODUTO,
	NEW.NOME,NEW.VALOR);

END
$

DELIMITER ;

DELIMITER $
-- TODA VEZ QUE É DELETADO UM PRODUTO, É INSERIDO NO BANCO BACKUP
/*
	NESTE CASO ESTAMOS PEGANDO ANTES DE DELETAR, MAS ESTAMOS PEGANDO O VALOR OLD.PRODUTO, OU SEJA, UM VALOR "VELHO", QUE JA FOI CRIADO
*/

CREATE TRIGGER BACKUP_PRODUTO_DEL
BEFORE DELETE ON PRODUTO
FOR EACH ROW
BEGIN
	
	INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL,OLD.IDPRODUTO,
	OLD.NOME,OLD.VALOR);

END
$

DELIMITER ;

DELETE FROM PRODUTO WHERE IDPRODUTO = 2;

DROP TRIGGER BACKUP_PRODUT;

DELIMITER $
/*
	ESTAMOS PEGANDO O VALOR "AFTER", OU SEJA DEPOIS QUE FOI INSERIDO, ENTAO JÁ TERA ID
*/
CREATE TRIGGER BACKUP_PRODUTO
AFTER INSERT ON PRODUTO
FOR EACH ROW
BEGIN
	
	INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL,NEW.IDPRODUTO,
	NEW.NOME,NEW.VALOR);

END
$

DELIMITER ;

INSERT INTO PRODUTO VALUES(NULL,'LIVRO C#',100.00);

SELECT * FROM PRODUTO;
SELECT * FROM BACKUP.BKP_PRODUTO;

/*
	RECAPITULANDO:
		É PRECISO SABER ULTILIZAR CORRETAMENTE OLD/NEW/AFTER/BEFORE
*/



-- CRIANDO UM NOVO CAMPO NA TABELA BKP_PRODUTO, PARA INFORMAR O EVENTO EM QUE O DADO FOI INSERIDO
DROP TRIGGER BACKUP_PRODUTO_DEL;

ALTER TABLE BACKUP.BKP_PRODUTO
ADD EVENTO CHAR(1);

DELIMITER $

CREATE TRIGGER BACKUP_PRODUTO_DEL
BEFORE DELETE ON PRODUTO
FOR EACH ROW
BEGIN
	
	INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL,OLD.IDPRODUTO,
	OLD.NOME,OLD.VALOR,'D');

END
$

DELIMITER ;

DELETE FROM PRODUTO WHERE IDPRODUTO = 4;
SELECT * FROM BACKUP.BKP_PRODUTO;

+-------+-----------+------------------+--------+--------+
| IDBKP | IDPRODUTO | NOME             | VALOR  | EVENTO |
+-------+-----------+------------------+--------+--------+
|     1 |         0 | LIVRO MODELAGEM  |  50.00 | NULL   |
|     2 |         0 | LIVRO BI         |  80.00 | NULL   |
|     3 |         0 | LIVRO ORACLE     |  70.00 | NULL   |
|     4 |         0 | LIVRO SQL SERVER | 100.00 | NULL   |
|     5 |         2 | LIVRO BI         |  80.00 | NULL   |
|     6 |         5 | LIVRO C#         | 100.00 | NULL   |
|     7 |         4 | LIVRO SQL SERVER | 100.00 | D      |
+-------+-----------+------------------+--------+--------+



/* A 43 - TRIGGER DE AUDITORIA */
DELIMITER ;

DROP DATABASE LOJA;

DROP DATABASE BACKUP;

CREATE DATABASE LOJA;

USE LOJA;

CREATE TABLE PRODUTO(
	IDPRODUTO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	VALOR FLOAT(10,2)
);

INSERT INTO PRODUTO VALUES(NULL,'LIVRO MODELAGEM',50.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO BI',80.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO ORACLE',70.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO SQL SERVER',100.00);

/*QUANDO*/
SELECT NOW();
/*QUEM*/
SELECT CURRENT_USER();

CREATE DATABASE BACKUP;

USE BACKUP;

CREATE TABLE BKP_PRODUTO(
	IDBACKUP INT PRIMARY KEY AUTO_INCREMENT,
	IDPRODUTO INT,
	NOME VARCHAR(30),
	VALOR_ORIGINAL FLOAT(10,2),
	VALOR_ALTERADO FLOAT(10,2),
	DATA DATETIME,
	USUARIO VARCHAR(30),
	EVENTO CHAR(1)
	
);

USE LOJA;

SELECT * FROM PRODUTO;

DELIMITER $

CREATE TRIGGER AUDIT_PROD
AFTER UPDATE ON PRODUTO
FOR EACH ROW
BEGIN

	INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL,OLD.IDPRODUTO,OLD.NOME,
	OLD.VALOR,NEW.VALOR,NOW(),CURRENT_USER(),'U');
	
END
$

DELIMITER ;

UPDATE PRODUTO SET VALOR = 110.00
WHERE IDPRODUTO = 4;

SELECT * FROM PRODUTO;

mysql> SELECT * FROM BACKUP.BKP_PRODUTO;
+----------+-----------+------------------+----------------+----------------+---------------------+----------------+--------+
| IDBACKUP | IDPRODUTO | NOME             | VALOR_ORIGINAL | VALOR_ALTERADO | DATA                | USUARIO        | EVENTO |
+----------+-----------+------------------+----------------+----------------+---------------------+----------------+--------+
|        1 |         4 | LIVRO SQL SERVER |         100.00 |         110.00 | 2024-05-15 19:35:58 | root@localhost | U      |
+----------+-----------+------------------+----------------+----------------+---------------------+----------------+--------+


/* A44 - AUTORELACIONAMENTO */

CREATE TABLE CURSOS(
	IDCURSO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	HORAS INT,
	VALOR FLOAT(10,2),
	ID_PREREQ INT
);

-- A CONTRAINT ABAIXO, ESTA CRIANDO UMA CONTRAINT PARA A TABELA CURSOS, E A CHAVE ESTRANGEIRA SERA ID_PREREQ, OU SEJA, ESTA INDICANDO QUE A CHAVE ESTRANGEIRA SERA UM DADO DA PRORIA TABELA, ASSIM, UMA LINHA DA TABELA PODE FAZER REFERENCIA A OUTRA LINHA DA MESMA TABELA
ALTER TABLE CURSOS ADD CONSTRAINT FK_PREREQ
FOREIGN KEY(ID_PREREQ) REFERENCES CURSOS(IDCURSO);

INSERT INTO CURSOS VALUES(NULL,'BD RELACIONAL',20,400.00,NULL);
INSERT INTO CURSOS VALUES(NULL,'BUSINESS INTELLIGENCE',40,800.00,1);
INSERT INTO CURSOS VALUES(NULL,'RELATORIOS AVANCADOS',20,600.00,2);
INSERT INTO CURSOS VALUES(NULL,'LOGICA PROGRAM',20,400.00,NULL);
INSERT INTO CURSOS VALUES(NULL,'RUBY',30,500.00,4);

SELECT * FROM CURSOS;
SELECT NOME, VALOR, HORAS, IFNULL(ID_PREREQ,"SEM REQ") REQUISITO
FROM CURSOS;



--EXERCICIO
/* NOME, VALOR, HORAS E O NOME DO PRE REQUISITO DO CURSO */

SELECT 
C.NOME AS CURSO, 
C.VALOR AS VALOR, 
C.HORAS AS CARGA, 
IFNULL(P.NOME, "---") AS PREREQ
FROM CURSOS C LEFT JOIN CURSOS P      -- A CLAUSULA LEFT JOIN, NESTE CASO, ESTA TRAZENDO TUDO DE CURSOS C E TMB O QUE TEM EM CURSOS P
ON P.IDCURSO = C.ID_PREREQ;
	   
+-----------------------+--------+-------+-----------------------+
| CURSO                 | VALOR  | CARGA | PREREQ                |
+-----------------------+--------+-------+-----------------------+
| BD RELACIONAL         | 400.00 |    20 | ---                   |
| BUSINESS INTELLIGENCE | 800.00 |    40 | BD RELACIONAL         |
| RELATORIOS AVANCADOS  | 600.00 |    20 | BUSINESS INTELLIGENCE |
| LOGICA PROGRAM        | 400.00 |    20 | ---                   |
| RUBY                  | 500.00 |    30 | LOGICA PROGRAM        |
+-----------------------+--------+-------+-----------------------+

/*
	CURSORES
*/
CREATE DATABASE CURSORES;
USE CURSORES;

CREATE TABLE VENDEDORES(
	IDVENDEDOR INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(50),
	JAN INT,
	FEV INT,
	MAR INT
);

INSERT INTO VENDEDORES VALUES(NULL,'MAFRA',32432,242334,574545);
INSERT INTO VENDEDORES VALUES(NULL,'CLARA',65465,65443,653454);
INSERT INTO VENDEDORES VALUES(NULL,'JOAO',12432,65356,8756);
INSERT INTO VENDEDORES VALUES(NULL,'LILIAN',4567,9676,8765);
INSERT INTO VENDEDORES VALUES(NULL,'ANTONIO',3467,68756,99765);
INSERT INTO VENDEDORES VALUES(NULL,'GLORIA',54786,76889,7098);

SELECT * FROM VENDEDORES;
+------------+---------+-------+--------+--------+
| IDVENDEDOR | NOME    | JAN   | FEV    | MAR    |
+------------+---------+-------+--------+--------+
|          1 | MAFRA   | 32432 | 242334 | 574545 |
|          2 | CLARA   | 65465 |  65443 | 653454 |
|          3 | JOAO    | 12432 |  65356 |   8756 |
|          4 | LILIAN  |  4567 |   9676 |   8765 |
|          5 | ANTONIO |  3467 |  68756 |  99765 |
|          6 | GLORIA  | 54786 |  76889 |   7098 |
+------------+---------+-------+--------+--------+

SELECT NOME, (JAN+FEV+MAR) AS TOTAL FROM VENDEDORES;
SELECT NOME, (JAN+FEV+MAR) AS TOTAL, (JAN+FEV+MAR)/3 AS MEDIA FROM VENDEDORES;

CREATE TABLE VEND_TOTAL(
	NOME VARCHAR(50),
	JAN INT,
	FEV INT,
	MAR INT,
	TOTAL INT,
	MEDIA INT
);

DELIMITER $

CREATE PROCEDURE INSEREDADOS()
BEGIN
		DECLARE FIM INT DEFAULT 0;
		DECLARE VAR1, VAR2, VAR3, VTOTAL, VMEDIA INT;
		DECLARE VNOME VARCHAR(50);
		
		DECLARE REG CURSOR FOR(
			SELECT NOME, JAN, FEV, MAR FROM VENDEDORES
		);
		
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET FIM = 1;
		
		OPEN REG;
		
		REPEAT
		
			FETCH REG INTO VNOME, VAR1, VAR2, VAR3;
			IF NOT FIM THEN
			
				SET VTOTAL = VAR1 + VAR2 + VAR3;
				SET VMEDIA = VTOTAL / 3;
				
				INSERT INTO VEND_TOTAL VALUES(VNOME,VAR1,VAR2,VAR3,VTOTAL,VMEDIA);
				
			END IF;
			
		UNTIL FIM END REPEAT;
		
		CLOSE REG;
END
$

DELIMITER ;

SELECT * FROM VENDEDORES;
SELECT * FROM VEND_TOTAL;

DELETE FROM VEND_TOTAL;

CALL INSEREDADOS();


/* A47 SEGUNDA E TERCEIRAS FORMAS NORMAIS */

/*
	-- PRIMEIRA FN
	 
	 ATOMICIDADE - UM CAMPO NAO PODE SER DIVISIVEL
	 UM CAMPO NAO PODE SER VETORIZADO
	 PK CHAVE PRIMARIA

*/

CREATE DATABASE CONSULTORIO;

USE CONSULTORIO;

CREATE TABLE PACIENTE(
	IDPACIENTE INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	SEXO CHAR(1),
	EMAIL VARCHAR(30),
	NASCIMENTO DATE
);

CREATE TABLE MEDICO(
	IDMEDICO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	SEXO CHAR(1),
	ESPECIALIDADE VARCHAR(30),
	FUNCIONARIO ENUM('S','N')
);

CREATE TABLE HOSPITAL(
	IDHOSPITAL INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	BAIRRO VARCHAR(30),
	CIDADE VARCHAR(30),
	ESTADO CHAR(2)
);

CREATE TABLE CONSULTA(
	IDCONSULTA INT PRIMARY KEY AUTO_INCREMENT,
	ID_PACIENTE INT,
	ID_MEDICO INT,
	ID_HOSPITAL INT,
	DATA DATETIME,
	DIAGNOSTICO VARCHAR(50)
);

CREATE TABLE INTERNACAO(
	IDINTERNACAO INT PRIMARY KEY AUTO_INCREMENT,
	ENTRADA DATETIME,
	QUARTO INT,
	SAIDA DATETIME,
	OBSERVACOES VARCHAR(50),
	ID_CONSULTA INT UNIQUE	
);  

ALTER TABLE CONSULTA
ADD CONSTRAINT FK_CONSULTA_PACIENTE
FOREIGN KEY(ID_PACIENTE)
REFERENCES PACIENTE(IDPACIENTE);

ALTER TABLE CONSULTA
ADD CONSTRAINT FK_CONSULTA_MEDICO
FOREIGN KEY(ID_MEDICO)
REFERENCES MEDICO(IDMEDICO);

ALTER TABLE CONSULTA
ADD CONSTRAINT FK_CONSULTA_HOSPITAL
FOREIGN KEY(ID_HOSPITAL)
REFERENCES HOSPITAL(IDHOSPITAL);

ALTER TABLE INTERNACAO
ADD CONSTRAINT FK_INTERNACAO_CONSULTA
FOREIGN KEY(ID_CONSULTA)
REFERENCES CONSULTA(IDCONSULTA);